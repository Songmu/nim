#!/usr/bin/env perl

use strict;
use warnings;
use FindBin::libs;

use Pod::Usage;
use Getopt::Long;

use Nim;

use Carp;

local $SIG{__DIE__} = sub { Carp::confess(@_) };

GetOptions(
    \my %options,
    qw/help server port=i host=s/
);
pod2usage(0) if $options{help};

my $nim = Nim->new;
$nim->run;

# delay the build process for reloader
sub build(&;$) {
    my $block = shift;
    my $app   = shift || sub { };
    return sub { $block->($app->()) };
}

if ($options{server}) {
    $nim->log->info('Starting build-in server');

    my $handler = sub {
        sub {
            my $env  = shift;
            my @path = grep { $_ } split '/', $env->{PATH_INFO};
            my $fn   = pop @path || 'index.html';

            my $dir = $nim->conf->site_dir;
            $dir = $dir->subdir(@path) if @path;

            my $file = $dir->file($fn);
            $file = $dir->subdir($file->basename)->file('index.html') if -d $file;

            if (-f $file) {
                require Plack::App::File;
                my $type = Plack::App::File->mime_type_for($file);

                my $fh = $file->openr or die $!;
                return [
                    200,
                    [ 'Content-Type' => $type, 'Content-Length' => -s $fh ],
                    $fh
                ];
            }
            else {
                return [ 404, [ "Content-Type" => "text/plain" ], [ "Not Found" ] ];
            }
        };
    };
    require Plack::Middleware::AccessLog;
    $handler = build {
        Plack::Middleware::AccessLog->wrap( $_[0], logger => sub { print STDERR @_ } );
    } $handler;

    require Plack::Loader;
    $options{port} ||= 4423;
    $options{host} ||= '0.0.0.0';

    Plack::Loader->auto(%options)->run($handler->());
}
